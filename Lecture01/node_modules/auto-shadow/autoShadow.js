
class AutoShadow {
    constructor({ darkStart = 18, darkEnd = 6, batteryThreshold = 50 } = {}) {
        this.darkStart = darkStart;
        this.darkEnd = darkEnd;
        this.batteryThreshold = batteryThreshold;
        this.injectDarkModeCSS();
        this.init();
    }

    init() {
        this.applyDarkMode();
        this.monitorBattery();
    }

    isNightTime() {
        const hours = new Date().getHours();
        return hours >= this.darkStart || hours < this.darkEnd;
    }

    applyDarkMode() {
        if (this.isNightTime()) {
            document.documentElement.classList.add("dark-mode");
        } else {
            document.documentElement.classList.remove("dark-mode");
        }
    }

    monitorBattery() {
        if (navigator.getBattery) {
            navigator.getBattery().then(battery => {
                this.handleBatteryChange(battery);
                battery.addEventListener("levelchange", () => this.handleBatteryChange(battery));
            });
        }
    }

    handleBatteryChange(battery) {
        if (battery.level * 100 <= this.batteryThreshold) {
            document.documentElement.classList.add("dark-mode");
        } else {
            this.applyDarkMode();
        }
    }

    injectDarkModeCSS() {
        const style = document.createElement("style");
        style.innerHTML = `
            .dark-mode {
                background-color: #121212;
                color: #ffffff;
            }
            .dark-mode a {
                color: #bb86fc;
            }
            .dark-mode button {
                background-color: #333;
                color: #fff;
            }
        `;
        document.head.appendChild(style);
    }
}
export default AutoShadow;
